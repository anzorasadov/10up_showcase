<?php
namespace CustomWidgets\CrowdDesk;

if (!defined('ABSPATH')) exit;

require_once($_SERVER['DOCUMENT_ROOT'] . '/wp-load.php');
require_once(__DIR__ . '/crowddesk.adapter.php');

Class API {
  private $base_url = 'https://api.crowddesk.io/v1/';
  private $api_key;
  private $curl;
  private $headers;
  private $adapter;

  public function __construct() {
    $this->api_key = CD_API_KEY;
    $this->headers = array('Accept: application/json', 'Authorization: Bearer ' . $this->api_key);
    $this->adapter = new Adapter();
  }

  private function setup_curl($url) {
    $curl = curl_init();
    $url = $this->base_url . $url;

    curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($curl, CURLOPT_URL, $url);
    curl_setopt($curl, CURLOPT_HTTPHEADER, $this->headers);

    return $curl;
  }

  public function fetch_emissions($locale = 'at') {
    $url = 'emissions/';
    $curl = $this->setup_curl($url);
    $response = curl_exec($curl);
    curl_close($curl);

    $projects = $this->fetch_projects();

    return $this->adapter->transform_to_properties(json_decode($response), $projects, $locale);
  }

  public function fetch_emission_by_id($id) {
    $curl = $this->setup_curl('emissions/'.$id);
    $response = curl_exec($curl);
    curl_close($curl);

    $projects = $this->fetch_projects();

    return $this->adapter->transform_to_properties(json_decode("[".$response."]"), $projects);
  }

  private function fetch_projects() {
    $curl = $this->setup_curl('projects/');
    $response = curl_exec($curl);
    curl_close($curl);

    return $this->adapter->transform_projects(json_decode($response));
  }

  // deprecated
  private function fetch_investments() {
    $curl = $this->setup_curl('investments/?limit=100000000');
    $response = curl_exec($curl);
    curl_close($curl);

    return $this->adapter->transform_investments(json_decode($response));
  }

  public function get_emissions_for_list() {
    $emissions = $this->fetch_emissions();
    $options = [];

    foreach($projects as $item) {
      var_dump('<pre>', $item['id'], '</pre>');
      array_push($options, array($item['id'] => $item['address']));
    }

    return $options;
  }
}